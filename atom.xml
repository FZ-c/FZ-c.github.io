<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>老陈的程序员之路</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://FZ-c.github.io/"/>
  <updated>2019-04-18T14:35:27.618Z</updated>
  <id>http://FZ-c.github.io/</id>
  
  <author>
    <name>FZChen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019省赛预备-Practice Round 1</title>
    <link href="http://FZ-c.github.io/2019/04/18/2019%E7%9C%81%E8%B5%9B%E9%A2%84%E5%A4%87-Practice-Round-1/"/>
    <id>http://FZ-c.github.io/2019/04/18/2019省赛预备-Practice-Round-1/</id>
    <published>2019-04-18T08:39:30.000Z</published>
    <updated>2019-04-18T14:35:27.618Z</updated>
    
    <content type="html"><![CDATA[<p>题目列表：<a href="https://codeforces.com/gym/242928/attachments/download/7292/statements.pdf" target="_blank" rel="noopener">https://codeforces.com/gym/242928/attachments/download/7292/statements.pdf</a></p><p>传送门：<a href="https://codeforces.com/gym/242928" target="_blank" rel="noopener">https://codeforces.com/gym/242928</a></p><a id="more"></a><p>第一次在cf的gym上开比赛，感慨良多。<del>（哇cf功能有点太多了吧tql！）</del></p><p>这一次选了这一套题（<a href="https://codeforces.com/gym/101853" target="_blank" rel="noopener">https://codeforces.com/gym/101853</a>，传送门进不去可以在这里进去，因为传送门是要我邀请才能进去的），难度二星。算是简单的。</p><p>一开始抓了A题过来看，嗯~是个简单题？然后就很自信地写了，然后就很正常的WA了。</p><p>皱了皱眉头，改了一下，emmmm，继续WA。</p><p>算了，先弃掉，看了H题和I题，都是很简单的计算题。都1A了。</p><p>队友干了F题和D题，我再干掉J题。似乎剩下的简单题就只有A了。</p><p>于是回头讨论A怎么办，发现0要特殊处理。队友再交了两发WA之后终于过了。<del>（再次证明我是个傻逼）</del></p><p>最后看了一下G并讨论了一大波，经另一个队的大佬提醒是BSGS。便抄起了板子，然后发现WA了。赛后才知道是扩展BSGS。<del>（哭死）</del></p><p><del>K题真的是L1-08警告</del></p><h1 id="A-Zero-Array"><a href="#A-Zero-Array" class="headerlink" title="A Zero Array"></a>A Zero Array</h1><p>待补</p><h1 id="B-New-Assignment"><a href="#B-New-Assignment" class="headerlink" title="B New Assignment"></a>B New Assignment</h1><p>待补</p><h1 id="C-Intersections"><a href="#C-Intersections" class="headerlink" title="C Intersections"></a>C Intersections</h1><p>待补</p><h1 id="D-Balloons"><a href="#D-Balloons" class="headerlink" title="D Balloons"></a>D Balloons</h1><p>待补</p><h1 id="E-Maximum-Sum"><a href="#E-Maximum-Sum" class="headerlink" title="E Maximum Sum"></a>E Maximum Sum</h1><p>待补</p><h1 id="F-Working-Time"><a href="#F-Working-Time" class="headerlink" title="F Working Time"></a>F Working Time</h1><p>待补</p><h1 id="G-Hard-Equation"><a href="#G-Hard-Equation" class="headerlink" title="G Hard Equation"></a>G Hard Equation</h1><h1 id="H-Cube"><a href="#H-Cube" class="headerlink" title="H Cube"></a>H Cube</h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>已知正立方体的表面积，求正方体棱长。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p><del>（初中数学）</del></p><p>表面积 $S=6x^2$，棱长 $x=\sqrt{S/6}$。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, d;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;a, &amp;b, &amp;d);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.8lf\n"</span>, (<span class="keyword">double</span>)d * d / <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="I-Circles"><a href="#I-Circles" class="headerlink" title="I Circles"></a>I Circles</h1><h2 id="题目大意-1"><a href="#题目大意-1" class="headerlink" title="题目大意"></a>题目大意</h2><p>如下图，先以点$c$为圆心画一个直径为$d$的圆，然后再画一个内接正方形。再以正方形四条边为直径画一个圆。求阴影部分的面积。</p><p><img src="/2019/04/18/2019省赛预备-Practice-Round-1/6005b8a93fccb43ec514b94d93997bea36464de3.png" alt></p><h2 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h2><p><del>瞎鸡儿算就对了</del></p><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, d;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;a, &amp;b, &amp;d);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.8lf\n"</span>, (<span class="keyword">double</span>)d * d / <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="J-Smallest-Difference"><a href="#J-Smallest-Difference" class="headerlink" title="J Smallest Difference"></a>J Smallest Difference</h1><h2 id="题目大意-2"><a href="#题目大意-2" class="headerlink" title="题目大意"></a>题目大意</h2><p>给定一个数组，让你从数组中挑一些数使得所挑的数中任意两个数的差都不大于1。求你能跳的数的最大个数。</p><h2 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h2><p>统计各个数字出现的次数，找到相邻两个数出现次数之和的最大值即可。</p><h2 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> num[<span class="number">10010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="built_in">memset</span>(num, <span class="number">0</span>, <span class="keyword">sizeof</span>(num));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">num[x]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (num[i] + num[i + <span class="number">1</span>] &gt; ans)</span><br><span class="line">ans = num[i] + num[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="K-Citations"><a href="#K-Citations" class="headerlink" title="K Citations"></a>K Citations</h1><p>待补</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目列表：&lt;a href=&quot;https://codeforces.com/gym/242928/attachments/download/7292/statements.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://codeforces.com/gym/242928/attachments/download/7292/statements.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;传送门：&lt;a href=&quot;https://codeforces.com/gym/242928&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://codeforces.com/gym/242928&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Codeforces" scheme="http://FZ-c.github.io/categories/Codeforces/"/>
    
    
      <category term="Codeforces" scheme="http://FZ-c.github.io/tags/Codeforces/"/>
    
      <category term="ccpc" scheme="http://FZ-c.github.io/tags/ccpc/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round#552（Div3）</title>
    <link href="http://FZ-c.github.io/2019/04/17/Codeforces-Round-552(Div3)/"/>
    <id>http://FZ-c.github.io/2019/04/17/Codeforces-Round-552(Div3)/</id>
    <published>2019-04-16T20:39:53.749Z</published>
    <updated>2019-04-17T04:29:19.427Z</updated>
    
    <content type="html"><![CDATA[<p>题目列表：<a href="https://codeforces.com/contest/1154/problems" target="_blank" rel="noopener">https://codeforces.com/contest/1154/problems</a></p><p>传送门：<a href="https://codeforces.com/contest/1154" target="_blank" rel="noopener">https://codeforces.com/contest/1154</a></p><a id="more"></a><p>这次CF的难度还是比较和谐的<del>(后背一凉)</del> 。</p><h2 id="A-Restoring-Three-Numbers"><a href="#A-Restoring-Three-Numbers" class="headerlink" title="A. Restoring Three Numbers"></a>A. Restoring Three Numbers</h2><h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><p>给出$a+b ,a+c ,b+c ,a+b+c$ 的值（可能不按顺序，$2 \leq x_i \leq 10^9$），求正整数$a,b,c$的值。</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>很明显，$a+b+c$肯定是最大的，将这个最大值依次减去另外三个值就可以得到这三个数。</p><h3 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">4</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">sort(num, num + <span class="number">4</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; num[<span class="number">3</span>] - num[i] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Make-Them-Equal"><a href="#B-Make-Them-Equal" class="headerlink" title="B. Make Them Equal"></a>B. Make Them Equal</h2><h3 id="题目大意-1"><a href="#题目大意-1" class="headerlink" title="题目大意"></a>题目大意</h3><p>给定一个数组（数组不空且元素个数不大于100，元素值为正整数且不大于100），现在对数组的每一个元素都可以实施一次操作：</p><ul><li>该元素$+D$</li><li>该元素$-D$</li></ul><p>现在要使数组所有元素相等，求能完成操作的非负整数$D$的最小值，若不能完成，输出-1。</p><h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><p>首先，去掉重复数字是必要的。（使用set）</p><p>去重之后，对set的大小进行分类讨论：</p><blockquote><p>若set大小为1，则 $D=0​$ 。（元素无需变化）</p><p>若set大小为2：</p><blockquote><p>若两个元素的均值为整数：$D=(num[1]+num[0])/2-num[0]$（即他们俩都转化为均值）</p><p>若两个元素的均值不为整数：$D=num[1]-num[0]$</p></blockquote><p>若set大小为3：</p><blockquote><p>判断中间值与最大值最小值的差是否相等：</p><p>相等：$D=num[1]-num[0]​$ （即中间值减较小值）</p><p>不相等：$-1$</p></blockquote><p>若set大小为其他情况：$-1$</p></blockquote><h3 id="参考代码-1"><a href="#参考代码-1" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;num;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">num.insert(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (num.size() == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> ppp[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator sit = num.begin(); sit != num.end(); sit++, i++)</span><br><span class="line">&#123;</span><br><span class="line">ppp[i] = *sit;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> xx = ppp[<span class="number">1</span>] - ppp[<span class="number">0</span>], yy = ppp[<span class="number">2</span>] - ppp[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (xx == yy)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; xx;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (num.size() == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> ppp[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator sit = num.begin(); sit != num.end(); sit++, i++)</span><br><span class="line">&#123;</span><br><span class="line">ppp[i] = *sit;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((ppp[<span class="number">0</span>] + ppp[<span class="number">1</span>]) % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (ppp[<span class="number">0</span>] + ppp[<span class="number">1</span>]) / <span class="number">2</span> - ppp[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ppp[<span class="number">1</span>] - ppp[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (num.size() == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Gourmet-Cat"><a href="#C-Gourmet-Cat" class="headerlink" title="C. Gourmet Cat"></a>C. Gourmet Cat</h2><h3 id="题目大意-2"><a href="#题目大意-2" class="headerlink" title="题目大意"></a>题目大意</h3><p>你有只猫，周一、四、日吃鱼，周二、六吃兔肉。其余时间吃鸡肉。现在你要去旅行，且你准备了 $a$ 份鱼、$b$ 份兔肉、$c$ 份鸡肉在家里。求你在某天出门后这只猫能按要求吃的的最大天数。（这个天数跟你周几出门有关）。（$1 \leq a,b,c \leq 7*10^8$）</p><h3 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h3><p>我们可以先将能吃完整一周的粮食去除，去除之后再模拟7种出门的情况取最大值即可。</p><h3 id="参考代码-2"><a href="#参考代码-2" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//记录每种粮食的个数</span></span><br><span class="line">ll num[<span class="number">3</span>];</span><br><span class="line"><span class="comment">//记录每天（下标1-7）吃的粮食种类，与上对应</span></span><br><span class="line"><span class="keyword">int</span> day[<span class="number">8</span>] = &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//除去能吃一周的粮食，ans1为能吃的完整周数</span></span><br><span class="line">ll ans1 = num[<span class="number">0</span>] / <span class="number">3</span>;</span><br><span class="line">ans1 = min(ans1, num[<span class="number">1</span>] / <span class="number">2</span>);</span><br><span class="line">ans1 = min(ans1, num[<span class="number">2</span>] / <span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">num[i] -= ans1 * (i == <span class="number">0</span> ? <span class="number">3</span> : <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">ll ans2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">7</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">ll ppp[<span class="number">3</span>];</span><br><span class="line">ll aans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">ppp[j] = num[j];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i;; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">8</span>)</span><br><span class="line">j = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (ppp[day[j]])</span><br><span class="line">&#123;</span><br><span class="line">ppp[day[j]]--;</span><br><span class="line">aans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans2 = max(ans2, aans);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//注意天数ans1要乘7</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans1 * <span class="number">7</span> + ans2;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-Walking-Robot"><a href="#D-Walking-Robot" class="headerlink" title="D. Walking Robot"></a>D. Walking Robot</h2><h3 id="题目大意-3"><a href="#题目大意-3" class="headerlink" title="题目大意"></a>题目大意</h3><p>有个机器人在 $0$ 位置处，现在要走到位置 $n$ 。机器人现在有一个电池容量为 $b$ ，还有一个蓄电池容量为 $a$（一开始都是满的）。数组 $s$ 的元素值代表此处有没有光照。机器人走一格耗1电量，如果<strong>机器人使用电池行走并在太阳下时</strong>，蓄电池电量+1（但不能超过容量）。求最远的行走距离。（$1 \leq n,b,a \leq 2*10^5 , 0 \leq s_i\leq 1$）</p><h3 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a>解题思路</h3><p>同样是一个分类讨论的问题：</p><blockquote><p>电池和蓄电池均无电：结束</p><p>在阳光下：</p><blockquote><p>电池有电：电池电量$-1$，蓄电池电量$+1$。</p><p>电池无电：蓄电池电量$-1​$。（切记这里无法充电）</p></blockquote><p>不在阳光下：</p><blockquote><p>蓄电池有电：蓄电池电量$-1$。</p><p>蓄电池无电：电池电量$-1$。</p></blockquote></blockquote><h3 id="参考代码-3"><a href="#参考代码-3" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">bool</span> sun[<span class="number">200010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, b, a;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; b &gt;&gt; a;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; sun[i];</span><br><span class="line"><span class="comment">// a 充电</span></span><br><span class="line">    <span class="comment">//now_a now_b 为当前电池电量</span></span><br><span class="line"><span class="keyword">int</span> now_a = a;</span><br><span class="line"><span class="keyword">int</span> now_b = b;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (now_a == <span class="number">0</span> &amp;&amp; now_b == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; i - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sun[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (now_b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (now_a &lt; a)</span><br><span class="line">&#123;</span><br><span class="line">now_b--;</span><br><span class="line">now_a++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">now_a--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">now_a--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (now_a)</span><br><span class="line">now_a--;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">now_b--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; n;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E-Two-Teams"><a href="#E-Two-Teams" class="headerlink" title="E. Two Teams"></a>E. Two Teams</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>有两个教练来选人，第一个人先选。给定一排人的技巧值$a_i$。</p><p>两个人选的策略是：找到还没被选的最大的一个，然后再选择它左边 $k​$ 个和右边 $k​$ 个。每次选完之后被选中的人出列。</p><p>他们轮流选直到全部选完。输出原数列中的每个人分别都被第几个人选了。</p><p>($1 \leq k \leq n \leq 2*10^5 , 1 \leq a_i \leq n$，保证技巧值唯一)</p><h3 id="解题思路-4"><a href="#解题思路-4" class="headerlink" title="解题思路"></a>解题思路</h3><p><del>这道题差点写到心态爆炸</del> </p><p>由于存在出列的操作，我们需要将数据存储在链表上。（方便删除被选中的结点）</p><p>再弄一个pair数组，存储数据和结点指针。对数组排序可以快速得到当前的最大值并找到该结点。</p><p>最后按照题目模拟过程删除结点记录1或者2最后输出即可。</p><p>这道题代码比较丑QAQ 。</p><p>这道题貌似可以用并查集做？等待补充。</p><h3 id="参考代码-4"><a href="#参考代码-4" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">pointer</span>;</span> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line">pointer sub;</span><br><span class="line">pointer pre;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> pointer Linklist;</span><br><span class="line"></span><br><span class="line">pair&lt;<span class="keyword">int</span>, pointer&gt;mmax[<span class="number">200010</span>];</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">200010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(pair&lt;<span class="keyword">int</span>, pointer&gt;a, pair&lt;<span class="keyword">int</span>, pointer&gt;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.first &gt; b.first;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delnode</span><span class="params">(pointer p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pointer pre = p-&gt;pre;</span><br><span class="line">pointer sub = p-&gt;sub;</span><br><span class="line"><span class="keyword">if</span>(pre!=<span class="literal">NULL</span>)</span><br><span class="line">pre-&gt;sub = sub;</span><br><span class="line"><span class="keyword">if</span>(sub!=<span class="literal">NULL</span>)</span><br><span class="line">sub-&gt;pre = pre;</span><br><span class="line">    <span class="comment">//标记该结点已被删除</span></span><br><span class="line">p-&gt;data = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">Linklist l = <span class="keyword">new</span> node;</span><br><span class="line">    <span class="comment">//头结点保存的是链表结点个数</span></span><br><span class="line">l-&gt;data = n;</span><br><span class="line">l-&gt;pre = l-&gt;sub = <span class="literal">NULL</span>;</span><br><span class="line">pointer p = l;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">pointer xxx = <span class="keyword">new</span> node;</span><br><span class="line">mmax[i] = make_pair(x, xxx);</span><br><span class="line">xxx-&gt;data = x;</span><br><span class="line">xxx-&gt;id = i;</span><br><span class="line">xxx-&gt;sub = p-&gt;sub;</span><br><span class="line">xxx-&gt;pre = p;</span><br><span class="line">p-&gt;sub = xxx;</span><br><span class="line">p = p-&gt;sub;</span><br><span class="line">&#125;</span><br><span class="line">sort(mmax, mmax + n, cmp);</span><br><span class="line">    <span class="comment">//now为当前选择的人 0表示第一个人 1表示第二个人</span></span><br><span class="line"><span class="keyword">int</span> now = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">pointer ppp = mmax[i].second;</span><br><span class="line"><span class="keyword">if</span> (ppp-&gt;data == <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">        <span class="comment">//若未被选</span></span><br><span class="line"><span class="keyword">if</span> (ans[ppp-&gt;id] == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans[ppp-&gt;id] = now + <span class="number">1</span>;</span><br><span class="line">pointer pre = ppp-&gt;pre;</span><br><span class="line">pointer sub = ppp-&gt;sub;</span><br><span class="line">delnode(ppp);</span><br><span class="line">l-&gt;data--;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> p = k; p &gt; <span class="number">0</span> &amp;&amp; pre != <span class="literal">NULL</span> &amp;&amp; pre != l; p--)</span><br><span class="line">&#123;</span><br><span class="line">ans[pre-&gt;id] = now + <span class="number">1</span>;</span><br><span class="line">                 <span class="comment">//保存当前结点的前驱后删除结点</span></span><br><span class="line">pointer q = pre-&gt;pre;</span><br><span class="line">delnode(pre);</span><br><span class="line">pre = q;</span><br><span class="line">l-&gt;data--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> p = k; p &gt; <span class="number">0</span> &amp;&amp; sub != <span class="literal">NULL</span>; p--)</span><br><span class="line">&#123;</span><br><span class="line">ans[sub-&gt;id] = now + <span class="number">1</span>;</span><br><span class="line">                 <span class="comment">//保存当前结点的后继后删除结点</span></span><br><span class="line">pointer q = sub-&gt;sub;</span><br><span class="line">delnode(sub);</span><br><span class="line">sub = q;</span><br><span class="line">l-&gt;data--;</span><br><span class="line">&#125;</span><br><span class="line">now = <span class="number">1</span> - now;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">//若数组元素个数为0</span></span><br><span class="line"><span class="keyword">if</span> (l-&gt;data == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="F-Shovels-Shop"><a href="#F-Shovels-Shop" class="headerlink" title="F. Shovels Shop"></a>F. Shovels Shop</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>商店内有 $n$ 把铲子售卖，价格分别为 $a_i$ ，而你现在要买 $k$ 把铲子。每把铲子你只能买一次。</p><p>这个商店有 $m$ 个优惠：若一次购买 $x_i$ 把铲子，那么这 $x_i$ 中较便宜的前 $y_i$ 把铲子免费。</p><p>你可以分多次购买 $k$ 把铲子，每次购买最多只能享受一个优惠，一个优惠可以享受多次。</p><p>求买 $k$ 把铲子的最小花费。</p><p>（$1 \leq n,m \leq2<em>10^5 ,1 \leq k \leq min(n,2000) ,1 \leq a_i \leq 2</em>10^5 ,1 \leq y_i \leq x_i \leq n$）</p><h3 id="解题思路-5"><a href="#解题思路-5" class="headerlink" title="解题思路"></a>解题思路</h3><p><del>完全背包好题</del></p><p>对于输入的铲子价格进行排序。（购买肯定选择最便宜的 $k$ 把铲子）</p><p>然后从买1把铲子到 $k​$ 把铲子，对每种情况枚举所有优惠取最小。</p><p>这里需要使用前缀和来获得没有被优惠（即免费）的铲子的花费。</p><p><img src="/2019/04/17/Codeforces-Round-552(Div3)/div3-F.jpg" alt="div3-F"></p><p>假设上图是进行到中间过程的情景。当前是购买 $i$ 把铲子的情况，假设当前可用的优惠之一是 $youhui[j]$。（它是一个pair数据，$first$ 是题目中 $x_i$ ，$second$ 是题目中 $y_i$。</p><p>我们记前缀和数组名字是 $psum$。即 $psum[i]$ 的值为前 $i$ 个铲子的价格和。</p><p>那么我们可以知道，使用该优惠后的总花费为 $dp[i-youhui[j].first]+I$ 的价值。我们可以使用前缀和来求得$I$的价值。</p><p>边看代码的式子和图示，我想你会明白的。</p><h3 id="参考代码-5"><a href="#参考代码-5" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">ll num[<span class="number">200010</span>];</span><br><span class="line">pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;youhui[<span class="number">200010</span>];</span><br><span class="line">ll dp[<span class="number">200010</span>];</span><br><span class="line">ll psum[<span class="number">200010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, m, k;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">sort(num, num + n);</span><br><span class="line"><span class="comment">//前缀和</span></span><br><span class="line">psum[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; i++)</span><br><span class="line">psum[i] = psum[i - <span class="number">1</span>] + num[i - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; youhui[i].first &gt;&gt; youhui[i].second;</span><br><span class="line"><span class="comment">//只买一个不优惠</span></span><br><span class="line">youhui[m].first = <span class="number">1</span>;</span><br><span class="line">youhui[m].second = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; i++)</span><br><span class="line">dp[i] = <span class="number">1e18</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i &gt;= youhui[j].first)</span><br><span class="line">&#123;</span><br><span class="line">ll x = dp[i - youhui[j].first] + psum[i] - psum[i - youhui[j].first + youhui[j].second];</span><br><span class="line"><span class="keyword">if</span> (x &lt; dp[i])</span><br><span class="line">dp[i] = x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; dp[k];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="G-Minimum-Possible-LCM"><a href="#G-Minimum-Possible-LCM" class="headerlink" title="G. Minimum Possible LCM"></a>G. Minimum Possible LCM</h2><h3 id="题目大意-4"><a href="#题目大意-4" class="headerlink" title="题目大意"></a>题目大意</h3><p>给定数组，求其中 $lcm(a_i,a_j)$ 的最小的位置 $i$ 和 $j$ 。($2 \leq n \leq 10^6 ,1 \leq a_i \leq 10^7$)</p><h3 id="解题思路-6"><a href="#解题思路-6" class="headerlink" title="解题思路"></a>解题思路</h3><p>类似欧拉筛的想法，枚举最大公因子找到是它的最小倍数的两个数。找到后求 $lcm$ 保存最小值即可。</p><p>代码还能改进，待更新。</p><h3 id="参考代码-6"><a href="#参考代码-6" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">ll vis[<span class="number">10000010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll ppp = <span class="number">1e18</span>;</span><br><span class="line">pair&lt;ll, ll&gt;ans;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">ll max_num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">max_num = max(max_num, x);</span><br><span class="line"><span class="keyword">if</span> (vis[x])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x &lt; ppp)</span><br><span class="line">&#123;</span><br><span class="line">ans.first = vis[x];</span><br><span class="line">ans.second = i;</span><br><span class="line">ppp = x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">vis[x] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= max_num; i++)</span><br><span class="line">&#123;</span><br><span class="line">pair&lt;ll, ll&gt;aans;</span><br><span class="line">aans.first = aans.second = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (ll j = i; j &lt;= max_num; j += i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (vis[j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (aans.first == <span class="number">-1</span>)</span><br><span class="line">aans.first = j;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">aans.second = j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (aans.second != <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (aans.second != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">ll Max = aans.first * aans.second / i;</span><br><span class="line"><span class="keyword">if</span> (Max &lt; ppp)</span><br><span class="line">&#123;</span><br><span class="line">ppp = Max;</span><br><span class="line">ans.first = vis[aans.first];</span><br><span class="line">ans.second = vis[aans.second];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ans.first &gt; ans.second)</span><br><span class="line">swap(ans.first, ans.second);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%I64d %I64d"</span>, ans.first, ans.second);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id><a href="#" class="headerlink" title=" "></a> </h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目列表：&lt;a href=&quot;https://codeforces.com/contest/1154/problems&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://codeforces.com/contest/1154/problems&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;传送门：&lt;a href=&quot;https://codeforces.com/contest/1154&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://codeforces.com/contest/1154&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Codeforces" scheme="http://FZ-c.github.io/categories/Codeforces/"/>
    
    
      <category term="Codeforces" scheme="http://FZ-c.github.io/tags/Codeforces/"/>
    
      <category term="div3" scheme="http://FZ-c.github.io/tags/div3/"/>
    
  </entry>
  
  <entry>
    <title>测试赛I题目及题解</title>
    <link href="http://FZ-c.github.io/2019/04/14/%E6%B5%8B%E8%AF%95%E8%B5%9BI%E9%A2%98%E7%9B%AE%E5%8F%8A%E9%A2%98%E8%A7%A3/"/>
    <id>http://FZ-c.github.io/2019/04/14/测试赛I题目及题解/</id>
    <published>2019-04-14T10:03:01.850Z</published>
    <updated>2019-04-16T23:29:30.544Z</updated>
    
    <content type="html"><![CDATA[<p>传送门：<a href="http://fzcoj.hustoj.com/contest.php?cid=1061" target="_blank" rel="noopener">http://fzcoj.hustoj.com/contest.php?cid=1061</a></p><a id="more"></a><h1 id="测试赛I题目及题解"><a href="#测试赛I题目及题解" class="headerlink" title="测试赛I题目及题解"></a>测试赛I题目及题解</h1><h2 id="A-amp-B-买游戏"><a href="#A-amp-B-买游戏" class="headerlink" title="A&amp;B.买游戏"></a>A&amp;B.买游戏</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>大家都知道Steam这款理财软件吧？它是当前最大的游戏发布平台之一。玩家可以在该平台购买、下载、讨论、上传和分享游戏和软件。</p><p>老陈最近安利了 $N$ 个朋友来使用Steam，他们有一部分人在Steam上购买了或者退购了某款游戏。</p><p>现在老陈知道他们在这段时间内购买/退购的情况 ，他想请你告诉他他的某些朋友拥有了几个游戏。</p><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h3><p>输入三个正整数 $N$ , $M$ , $Q$ ，分别代表被老陈安利来使用Steam的人数，这些人在Steam上的购买/退购记录条数，老陈想知道的朋友的游戏个数的人数。( $1\leq N\leq 10^5$ , $1\leq M \leq 10^6$ , $1\leq Q \leq 10^5$ )</p><p>接下来输入 $M$ 行，每行代表一个购买记录。格式为：</p><blockquote><p>记录类型 购买/退购人 游戏名</p></blockquote><p>记录类型仅包含一个字母：“G”为购买游戏，“T”为退购游戏。购买/退购人和游戏名均为一个长度不大于20且不包含空格的字符串。保证退购的游戏在之前肯定购买且游戏不会重复购买，记录按时间顺序给出。</p><p>接下来$Q$行，每行代表一个询问。</p><p>每行包含一个长度不超过20的字符串，代表老陈询问当前游戏个数的朋友名字。</p><h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h3><p>对于每个询问，输出一个整数，代表这位朋友在Steam上拥有的游戏个数。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote><p>3 6 3</p><p>G LiMing SHENZHEN_I/O</p><p>G ZhangSan SUDOKU</p><p>G LiSi CROSS_FIRE</p><p>G LiMing CROSS_FIRE</p><p>T LiSi CROSS_FIRE</p><p>G LiMing SUDOKU</p><p>LiSi</p><p>ZhangSan</p><p>LiMing</p></blockquote><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote><p>0</p><p>1</p><p>3</p></blockquote><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>对于A题：<br>可以使用map来实现存储，对于每个操作，用户游戏数仅会+1或-1。（保证退购的游戏在之前肯定购买且游戏不会重复购买）。</p><p>对于B题：<br>hash一下字符串就行了。<del>（其实A的想法放到B题可以卡过去）</del></p><h3 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;inf;</span><br><span class="line">    <span class="keyword">int</span> n, m, q;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%*c%d%*c%d%*c"</span>, &amp;n, &amp;m, &amp;q);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> type[<span class="number">50</span>], name[<span class="number">50</span>], game[<span class="number">50</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s%*c%s%*c%s%*c"</span>, type, name, game);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(type,<span class="string">"G"</span>)==<span class="number">0</span>)</span><br><span class="line">            inf[(<span class="built_in">string</span>)name]++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            inf[(<span class="built_in">string</span>)name]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">50</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s%*c"</span>, name);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, inf[(<span class="built_in">string</span>)name]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-“a”-N"><a href="#C-“a”-N" class="headerlink" title="C.“a”+N"></a>C.“a”+N</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>在C语言中，“a”加上一个数的结果是一个整数。</p><p>例如：“a”+6=97+6=103</p><p>但是老陈觉得这样很无聊，所以他改变了这个加的定义：加N的结果是当前字符串按字典序的顺序之后第N个字符串。</p><p>例如：”az”+4的结果就是”az”之后第四个字符串。(“az”，”ba”，”bb”，”bc”，”bd”)，所以”az”+4=”bd”。</p><p>现在请你编写程序实现它。</p><h3 id="输入描述-1"><a href="#输入描述-1" class="headerlink" title="输入描述"></a>输入描述</h3><p>第一行包含一个正整数$T$，代表数据组数。($1\leq T \leq 1000$)</p><p>接下来$T$行，每行一个测试数据。每个测试数据包含一个字符串$s$和一个正整数$X$。(字符串长度不大于$10^4$且保证非空，$1\leq X \leq 10^{13}$)</p><h3 id="输出描述-1"><a href="#输出描述-1" class="headerlink" title="输出描述"></a>输出描述</h3><p>对于每组测试数据，输出$s+X$的结果。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote><p>3</p><p>a 10</p><p>abcd 5</p><p>zzz 3</p></blockquote><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote><p>k</p><p>abci</p><p>aaac</p></blockquote><h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><p>将字符串看成26进制数，将数字$X$转化为26进制数后相加即可。相加之后注意进位，按字母输出即可。</p><h3 id="参考代码-1"><a href="#参考代码-1" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1E4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    ll n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        ll arr[MAXN] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %lld"</span>, s, &amp;n);</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">            arr[i] = s[len<span class="number">-1</span>-i] - <span class="string">'a'</span>;</span><br><span class="line">        ll next = <span class="number">0</span>;</span><br><span class="line">        arr[<span class="number">0</span>] += n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            next = arr[i] / <span class="number">26</span>;</span><br><span class="line">            arr[i] %= <span class="number">26</span>;</span><br><span class="line">            <span class="keyword">if</span>(next)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i == len<span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    arr[i+<span class="number">1</span>] = next<span class="number">-1</span>;</span><br><span class="line">                    len++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    arr[i+<span class="number">1</span>] += next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = len<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, <span class="string">'a'</span> + arr[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-OC数I"><a href="#D-OC数I" class="headerlink" title="D.OC数I"></a>D.OC数I</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>老陈非常喜欢素数，他现在想从某个区间的数中挑出任意个数相乘得到一个新数。如果这个新数是素数，老陈的兴奋值会+1。</p><p>一开始老陈的兴奋值为0，之后他会选择N个区间，对于每个区间他会进行K次操作，当然这K次操作不会存在重复，这样老陈才会真的开心。</p><p>请问最后老陈的兴奋值的最大值是多少？</p><h3 id="输入描述-2"><a href="#输入描述-2" class="headerlink" title="输入描述"></a>输入描述</h3><p>第一行输入两个数$N$和$K$。($1 \leq N \leq 10^6$,$1\leq K \leq 10^9$)</p><p>接下来$N$行，每行输入两个整数l和r代表老陈进行操作的区间 $[l,r]$。($1\leq l \leq r \leq 10^6$)</p><h3 id="输出描述-2"><a href="#输出描述-2" class="headerlink" title="输出描述"></a>输出描述</h3><p>输出一个整数代表老陈操作结束后兴奋值的最大值。</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote><p>2 5</p><p>2 10</p><p>1000 5000</p></blockquote><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote><p>0</p></blockquote><h3 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h3><p>回想一下素数的定义：因子只有1和它自己的数。那么对于一个素数$p$，肯定只有一种乘法表示：$p=1*p$ 。而对于其他的数，相乘的结果肯定不是素数。</p><p>那么，对于没有包含1的区间，对答案的贡献肯定是0。而对于包含1的区间，对答案的贡献为区间内的素数个数。</p><p>素数筛+前缀和即可解决问题。</p><h3 id="参考代码-2"><a href="#参考代码-2" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> prime_num[<span class="number">1000010</span>];</span><br><span class="line"><span class="keyword">bool</span> isprime[<span class="number">1000010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">1000000</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        prime_num[i] = prime_num[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (!isprime[i])</span><br><span class="line">        &#123;</span><br><span class="line">            prime_num[i]++;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; i*j &lt;= <span class="number">1000000</span>; j++)</span><br><span class="line">                isprime[i*j] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    init();</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> l, r;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="keyword">if</span> (l &gt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        ans += (min(prime_num[r], k));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E-有升有降"><a href="#E-有升有降" class="headerlink" title="E.有升有降"></a>E.有升有降</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>老陈某天的心情值跟过山车一样跌宕起伏，平常的时候，老陈的心情值是不下降的（即可能升高或不变但不会下降）。但是当老陈受到打击的时候<del>（做题自闭什么的）</del>，心情值就是不上升的（即可能下降或不变但不会上升）。</p><p>他的朋友想去安慰<del>（调侃）</del>一下老陈：“你在$a$时间到$b$时间是不是受到了什么打击了啊说给我乐乐？”</p><p>如果老陈在这段时间内的心情值前一部分是不下降的，剩下的部分是不上升的，那么他的朋友才会觉得这个提问有价值。所以请你判断一下这些提问时间是不是有价值的。</p><h3 id="输入描述-3"><a href="#输入描述-3" class="headerlink" title="输入描述"></a>输入描述</h3><p>第一行包含两个整数$n$，$m$。分别代表这一天的时间和他的朋友询问的次数。($1 \leq n,m \leq 10^5$)</p><p>第二行包含$n$个整数代表这一天的每一个时间老陈的心情值。(均不大于$10^9$且均为正整数)</p><p>接下来$m$行，每行包含两个正整数$a$，$b$，代表他的朋友询问的时间段。($1 \leq a \leq b \leq n $)</p><h3 id="输出描述-3"><a href="#输出描述-3" class="headerlink" title="输出描述"></a>输出描述</h3><p>对于每一个时间段，如果是值得提问的，输出”Yes”；否则输出”No”。</p><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote><p>8 6</p><p>1 2 1 3 3 5 2 1</p><p>1 3</p><p>2 3</p><p>2 4</p><p>8 8</p><p>1 4</p><p>5 8</p></blockquote><h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote><p>Yes</p><p>Yes</p><p>No</p><p>Yes</p><p>No</p><p>Yes</p></blockquote><h3 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a>解题思路</h3><p>$dp[i]$表示$a[i]$之前连续的不小于$a[i]$的数的个数，$rdp[i]$表示$a[i]$之后连续的不小于$a[i]$的数的个数。</p><p>如果$dp[l]+rdp[r]&gt;=r-l+1$，那么就是$Yes$，否则为$No$。</p><h3 id="参考代码-3"><a href="#参考代码-3" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100010</span>], dp[<span class="number">100010</span>], rdp[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, Q, l, r;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;Q);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt;= a[i - <span class="number">1</span>])</span><br><span class="line">            dp[i] = dp[i - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            dp[i] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt;= a[i + <span class="number">1</span>])</span><br><span class="line">            rdp[i] = rdp[i + <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            rdp[i] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;l, &amp;r);</span><br><span class="line">        <span class="keyword">if</span> (rdp[l] + dp[r] &gt;= r - l + <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="F-刷墙"><a href="#F-刷墙" class="headerlink" title="F.刷墙"></a>F.刷墙</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>最近老陈的亲戚家重新装修，老陈被叫去帮忙刷墙。</p><p>老陈拿着墙刷，刷着刷着感到无聊就转了一下。这转了一下不要紧，老陈的脑袋突然嗡的一声蹦出一个问题：</p><p>我拿着这个墙刷转一个角度，它涂了多大的面积的墙？</p><p>这问题一出来就不得了，老陈想了好久还没想出来。你能帮他解决吗？</p><p>我们用标准一点的语言来描述这个问题：</p><p>有一个矩形（即墙刷），左边的边长为$a$,上边的边长为$b$，后该矩形以左下角的点为旋转点进行旋转角度 $\theta$（如图所示）。求蓝色区域的面积。</p><p><img src="/2019/04/14/测试赛I题目及题解/TIM图片20190404164108.png" alt="TIM图片20190404164108"></p><h3 id="输入描述-4"><a href="#输入描述-4" class="headerlink" title="输入描述"></a>输入描述</h3><p>输入包含三个整数$a$，$b$，$\theta$。($1\leq a,b\leq 10^6$，$0\leq \theta \leq 180$)</p><h3 id="输出描述-4"><a href="#输出描述-4" class="headerlink" title="输出描述"></a>输出描述</h3><p>输出一个数代表所求面积，保留三位小数。</p><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote><p>2 2 90</p></blockquote><h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote><p>10.283</p></blockquote><h3 id="解题思路-4"><a href="#解题思路-4" class="headerlink" title="解题思路"></a>解题思路</h3><p><img src="/2019/04/14/测试赛I题目及题解/图片1.png" alt="图片1"></p><p>答案即为扇形面积加上区域$I$和区域$II$的面积。（即矩形面积）</p><h3 id="参考代码-4"><a href="#参考代码-4" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c, k, q;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; c &gt;&gt; k &gt;&gt; q;</span><br><span class="line">    ll r = c * c + k * k;</span><br><span class="line">    ll ju = c * k;</span><br><span class="line">    <span class="keyword">double</span> ans = q / <span class="number">360.0</span> * PI * r + ju;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.3lf"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><p><strong>E题若角度范围增大为360的话该怎么处理呢？</strong></p><h2 id="补题？"><a href="#补题？" class="headerlink" title="补题？"></a>补题？</h2><p>传送门：<a href="http://fzcoj.hustoj.com/contest.php?cid=1061" target="_blank" rel="noopener">http://fzcoj.hustoj.com/contest.php?cid=1061</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;传送门：&lt;a href=&quot;http://fzcoj.hustoj.com/contest.php?cid=1061&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://fzcoj.hustoj.com/contest.php?cid=1061&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="FZCOJ" scheme="http://FZ-c.github.io/categories/FZCOJ/"/>
    
    
      <category term="FZCOJ" scheme="http://FZ-c.github.io/tags/FZCOJ/"/>
    
      <category term="集训队" scheme="http://FZ-c.github.io/tags/%E9%9B%86%E8%AE%AD%E9%98%9F/"/>
    
      <category term="测试赛" scheme="http://FZ-c.github.io/tags/%E6%B5%8B%E8%AF%95%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>2018集训队考核</title>
    <link href="http://FZ-c.github.io/2018/09/01/2018%E9%9B%86%E8%AE%AD%E9%98%9F%E8%80%83%E6%A0%B8%E9%A2%98%E8%A7%A3/"/>
    <id>http://FZ-c.github.io/2018/09/01/2018集训队考核题解/</id>
    <published>2018-09-01T14:51:23.480Z</published>
    <updated>2019-04-16T20:38:04.641Z</updated>
    
    <content type="html"><![CDATA[<p>传送门：<a href="http://fzcoj.hustoj.com/contest.php?cid=1040" target="_blank" rel="noopener">http://fzcoj.hustoj.com/contest.php?cid=1040</a></p><a id="more"></a><h2 id="A-gcd×lcm"><a href="#A-gcd×lcm" class="headerlink" title="A.gcd×lcm"></a>A.gcd×lcm</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定两个数a、b，求a和b的最小公倍数与最大公因数的乘积。  </p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>仅包含两个数a、b。$（1≤a，b≤10^8）$ </p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>输出最小公倍数与最大公倍数的乘积。 </p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote><p>8 24</p></blockquote><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote><p>192</p></blockquote><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>因为$lcm(a,b)=a<em>b/gcd(a,b)$,所以$gcd(a,b)</em>lcm(a,b)=a*b$。</p><h3 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> x,y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;x,&amp;y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,x*y);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-循环矩阵"><a href="#B-循环矩阵" class="headerlink" title="B.循环矩阵"></a>B.循环矩阵</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>有一种矩阵，它满足下面的性质 ：</p><script type="math/tex; mode=display">a_{(i+1)j}=​</script><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>仅包含两个数a、b。$（1≤a，b≤10^8）$ </p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>输出最小公倍数与最大公倍数的乘积。 </p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote><p>8 24</p></blockquote><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote><p>192</p></blockquote><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>因为$lcm(a,b)=a<em>b/gcd(a,b)$,所以$gcd(a,b)</em>lcm(a,b)=a*b$。</p><h3 id="参考代码-1"><a href="#参考代码-1" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> x,y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%ld %ld"</span>,&amp;x,&amp;y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%ld"</span>,x*y);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="未完成"><a href="#未完成" class="headerlink" title="未完成"></a>未完成</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;传送门：&lt;a href=&quot;http://fzcoj.hustoj.com/contest.php?cid=1040&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://fzcoj.hustoj.com/contest.php?cid=1040&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="FZCOJ" scheme="http://FZ-c.github.io/categories/FZCOJ/"/>
    
    
      <category term="FZCOJ" scheme="http://FZ-c.github.io/tags/FZCOJ/"/>
    
      <category term="集训队" scheme="http://FZ-c.github.io/tags/%E9%9B%86%E8%AE%AD%E9%98%9F/"/>
    
  </entry>
  
  <entry>
    <title>2018六月月赛</title>
    <link href="http://FZ-c.github.io/2018/08/13/2018%E5%85%AD%E6%9C%88%E6%9C%88%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    <id>http://FZ-c.github.io/2018/08/13/2018六月月赛题解/</id>
    <published>2018-08-13T15:54:15.325Z</published>
    <updated>2019-04-16T20:37:59.868Z</updated>
    
    <content type="html"><![CDATA[<p>传送门：<a href="http://fzcoj.hustoj.com/contest.php?cid=1043" target="_blank" rel="noopener">http://fzcoj.hustoj.com/contest.php?cid=1043</a></p><a id="more"></a><h2 id="A-四边形"><a href="#A-四边形" class="headerlink" title="A.四边形"></a>A.四边形</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>老陈最近遇到了一个问题，他想计算一个四边形的面积。但是由于他遇到的四边形都是奇形怪状的所以他不想动手算了。你能否写一个程序帮他完成计算？ </p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>输入共四行，每行代表四边形的其中一个顶点的坐标。 </p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>输出一个数代表这四个点围成的四边形的面积，保留三位小数。 </p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote><p>2 2</p><p>2 -2</p><p>-2 2</p><p>-2 -2</p></blockquote><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote><p>16.000</p></blockquote><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>利用割补法进行计算。</p><h3 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h3><p>略</p><h2 id="B-悬崖"><a href="#B-悬崖" class="headerlink" title="B.悬崖"></a>B.悬崖</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p> 老陈某天夜里，做了一场噩梦。他梦见他受到了无数个无形的力的作用。而他的前方Y米处是一处悬崖。此时他会受到这些力作用M秒，在这段时间内老陈无法做出任何动作，这些力也不会发生改变。 </p><p> 他想知道，M秒过后，他会不会掉下悬崖。 </p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p> 第一行包含三个正整数N、M、Y，分别表示老陈受到的力的个数、受到这些力的时间、老陈离悬崖的距离。（1≤N≤105，0≤M≤105，1≤Y≤109） </p><p> 接下来N行，每行输入一个力的信息。这些力的表示均使用向量表示。老陈位于原点，悬崖在老陈的y轴方向。 </p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>若老陈在M秒后会掉下悬崖，输出“Die”；否则输出“Save”。 </p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote><p>3 8 5</p><p>1 1 0</p><p>-1 0 0</p><p>0 -1 0</p></blockquote><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote><p>Save</p></blockquote><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>本题的题意求N个力的和。</p><p>假设有两个力$F_1=(x_1,y_1,z_1)\;,\;F_2=(x_2,y_2,z_2)$。我们知道，合力$F=(x_1+x_2,y_1+y_2,z_1+z_2)$。</p><p>那么，题目中所给的N个力，我们只需要将他们的对应坐标加起来就可以得到合力的坐标。</p><p>然后，题目给出了力作用的时间m。那么，合力乘以m就是老陈在m秒后所处的位置。</p><p>题目给定悬崖所在的位置是在y轴上，那我们只需要判断最终老陈的y坐标是否超过了悬崖的位置即可。</p><p>注意数据范围，$10^5$个力施加了$10^5$秒。即使所有的力都是$F=(1,1,1)$,最终得到的坐标也是$10^{10}$级别的！</p><p>使用long long!</p><h3 id="参考代码-1"><a href="#参考代码-1" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m, total_y = <span class="number">0</span>;</span><br><span class="line">    ll k;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y, z;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line">        total_y += y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (k - (ll)m*total_y &lt;= <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Die"</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Save"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-反模幂运算"><a href="#C-反模幂运算" class="headerlink" title="C.反模幂运算"></a>C.反模幂运算</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p> 我们知道，计算$2^n \;mod \;m$是一个著名的问题。快速解决这个问题的算法是RSA加密算法的核心之一。</p><p>现在，我们想解决与问题“相反”的另一个问题：计算</p><script type="math/tex; mode=display">m\; mod \;2^n.</script><p>请你完成这个问题。 </p><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h3><p>仅包含两个正整数n、m。（1≤n,m≤$10^8$）</p><h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h3><p>输出一个整数，代表$m\; mod \;2^n$的值。 </p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote><p>4 42</p></blockquote><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote><p>10</p></blockquote><h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>注意数据范围！n≤$10^8$！</p><p>你能计算$2^{100000000}$吗？</p><p>当然不可能！</p><p>那么怎么办呢？</p><p>回到数据范围，m的范围也是最大为$10^8$。</p><p>计算器算一下，我们知道m不会大于$2^{27}$。那么，如果n大于27的话，很明显，最终式子的最终结果是m。</p><p>如果n不大于27，我们就老老实实模一下就行了。（反正不会超过int范围）</p><h3 id="参考代码-2"><a href="#参考代码-2" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">if</span> (n &gt; <span class="number">27</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, m);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, m % (<span class="keyword">int</span>)<span class="built_in">pow</span>((<span class="keyword">double</span>)<span class="number">2</span>, (<span class="keyword">double</span>)n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-闯关"><a href="#D-闯关" class="headerlink" title="D.闯关"></a>D.闯关</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p> 玩家A和玩家B现在正在魔塔中闯关。这座魔塔共有X层，要想打败这一层的领主才能前往下一关。</p><p>玩家A和玩家B很菜，他们自身的攻击力连第一层的领主都打不过。所以他们想到了另外一种方法：利用领主害怕的符咒来杀死领主。玩家A和玩家B的背包中都有一定数量的符咒并且玩家A拥有一个可以使用Y次的符咒转换器，它能够将任意一张符咒转换为另一张符咒。</p><p>现在他们准备出发了，请你判断下他们能否成功通关。 </p><h3 id="输入描述-1"><a href="#输入描述-1" class="headerlink" title="输入描述"></a>输入描述</h3><p> 第一行包含两个正整数X、Y，分别代表魔塔的层数和符咒转换器的使用次数。（1≤x,y≤$10^5$） </p><p>第二行代表玩家A中拥有的符咒的情况，其中第一个数代表玩家A拥有的符咒的数量。其后有个正整数，代表第i个符咒能作用于第i层的领主上。</p><p>第三行代表玩家B中拥有的符咒的情况，形式与第二行相同。 </p><h3 id="输出描述-1"><a href="#输出描述-1" class="headerlink" title="输出描述"></a>输出描述</h3><p>如果他们能够通关，输出“Yes”，然后空一个空格后输出使用符咒转换器的次数；如果他们无法通关，输出“No”。</p><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote><p>5 3</p><p>4 1 2 2 2</p><p>2 4 5</p></blockquote><h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote><p>Yes 1</p></blockquote><h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>我们考虑一下使用符咒转换器的条件：</p><ol><li><p>缺少打败某层的领主的符咒</p></li><li><p>有某个领主的符咒超过一张</p></li></ol><p>那么，我们统计一下一共有几种符咒，并统计其中可以拿来转换的符咒的数量。</p><p>如果转换之后能补齐，那么就是Yes，而使用的次数就是之前缺失的符咒的张数。</p><h3 id="参考代码-3"><a href="#参考代码-3" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;fu;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; t; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">            <span class="keyword">if</span> (!fu.insert(x).second)</span><br><span class="line">                k++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    k = min(k, m);</span><br><span class="line">    <span class="keyword">if</span> (fu.size() + k &gt;= n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Yes "</span> &lt;&lt; n - fu.size();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"No"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E-最小数-amp-最大数"><a href="#E-最小数-amp-最大数" class="headerlink" title="E.最小数 &amp; 最大数"></a>E.最小数 &amp; 最大数</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p> 小陈正在和他的朋友玩猜数游戏，小陈写了一个数字后告诉朋友这个数的位数和这个数的所有的位的和。</p><p>请你计算一下他的朋友可以猜的数的范围。 </p><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>只包含两个数a、b，分别代表小陈所写的数的位数和这个数的所有的位的和。（1≤a≤100,0≤b≤900） </p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p> 输出两个正整数，分别代表他的朋友所猜的数的最小值和最大值。</p><p>如果不存在符合情况的数，输出“-1 -1”。 </p><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><blockquote><p>2 15</p></blockquote><h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><blockquote><p>69 96</p></blockquote><h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>这题比较恶心。</p><p>细节多。</p><p>首先，当总和大于位数*9或者位数大于1但是和为0的时候，就只能输出”-1 -1”了。（注意当位数为1时存在总和为0的情况）</p><p>然后，确保存在之后，我们确定最大最小值即可。</p><p>最大值比较简单，把所有能组成的9放在前面，最后剩下多少就接在9的后面，如果现在位数还不够的话后面补0就行了。</p><p>例如：</p><blockquote><p>14 92</p></blockquote><p>我们能弄出10个9，最后剩下一个2。然后现在总共11位，还差3位，那就最后补3个0就是了。即99999999992000。</p><p>最小值比较麻烦，我们首先要跟最大值反着来。</p><p>把所有的9放在最后面，最后剩下多少就放在最前面。如果位数不够，那么现在最前面的那个数要减一，然后前面补1000……直到位数足够。</p><p>还是上面的那个例子：</p><p>我们将10个9放在最后，剩下2放在最前面。</p><p>即 29999999999。</p><p>但是现在只有11位，那么最前面的那一位就要减一。</p><p>即 19999999999。</p><p>然后前面用1000……接上直到位数足够。</p><p>即 10019999999999。</p><p>按照上面的思路写就完成了。</p><h3 id="参考代码-4"><a href="#参考代码-4" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len, sum;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; len &gt;&gt; sum;</span><br><span class="line">    <span class="keyword">int</span> max[<span class="number">110</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">int</span> min[<span class="number">110</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">int</span> min_pos = len<span class="number">-1</span>, max_pos = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> ((sum == <span class="number">0</span>&amp;&amp;len&gt;<span class="number">1</span>)||sum&gt;len*<span class="number">9</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"-1 -1"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i * <span class="number">9</span> &lt;= sum; i++)</span><br><span class="line">        max[max_pos++] = <span class="number">9</span>;</span><br><span class="line">    i--;</span><br><span class="line">    <span class="keyword">if</span> (sum - i * <span class="number">9</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        max[max_pos++] = sum - i * <span class="number">9</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i * <span class="number">9</span> &lt;= sum; i++)</span><br><span class="line">        min[min_pos--] = <span class="number">9</span>;</span><br><span class="line">    i--;</span><br><span class="line">    <span class="keyword">if</span> (sum - i * <span class="number">9</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        min[min_pos] = sum - i * <span class="number">9</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (min[min_pos] == <span class="number">0</span>&amp;&amp;min_pos&lt;len<span class="number">-1</span>)</span><br><span class="line">        min_pos++;</span><br><span class="line">    <span class="keyword">if</span> (min[min_pos] &gt; <span class="number">0</span>&amp;&amp;min[<span class="number">0</span>]==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        min[min_pos]--;</span><br><span class="line">        min[<span class="number">0</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; min[i];</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; max[i];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;传送门：&lt;a href=&quot;http://fzcoj.hustoj.com/contest.php?cid=1043&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://fzcoj.hustoj.com/contest.php?cid=1043&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="FZCOJ" scheme="http://FZ-c.github.io/categories/FZCOJ/"/>
    
    
      <category term="FZCOJ" scheme="http://FZ-c.github.io/tags/FZCOJ/"/>
    
  </entry>
  
</feed>
